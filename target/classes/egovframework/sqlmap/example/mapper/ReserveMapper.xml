<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.mapper.ReserveMapper">

	<resultMap id="ReserveResultMap" type="egovframework.vo.ReserveVO">
	    <result column="reservation_pk" property="reservationPk"/>
	    <result column="reservation_name" property="reservationName"/>
	    <result column="reservation_phone" property="reservationPhone"/>
	    <result column="reservation_email" property="reservationEmail"/>
	    <result column="reservation_birth" property="reservationBirth"/>
	    <result column="reservation_number" property="reservationNumber"/>
	    <result column="reservation_status" property="reservationStatus"/>
	    <result column="reservation_time" property="reservationTime"/>
	    <result column="user_pk" property="userPk"/>
	    <result column="seminar_pk" property="seminarPk"/>
    </resultMap>
    
    <insert id="insertReservation" >
        INSERT INTO reservation (
            reservation_name, reservation_phone, reservation_email, reservation_birth,
            reservation_number, reservation_login, reservation_status, reservation_time,
            user_pk, seminar_pk
        ) VALUES (
            #{reservationName}, #{reservationPhone}, #{reservationEmail}, #{reservationBirth},
            #{reservationNumber}, #{reservationLogin}, 'PROGRESSING', NOW(),
            #{userPk}, #{seminarPk}
        )
    </insert>
    
    <!-- 날짜로 예약 목록 조회 -->
    <select id="findByDate" parameterType="java.time.LocalDate" resultMap="ReserveResultMap">
        SELECT * FROM reservations WHERE date = #{date}
    </select>

    <!-- ID로 예약 조회 -->
    <select id="findById" parameterType="long" resultMap="ReserveResultMap">
        SELECT * FROM reservations WHERE id = #{id}
    </select>

    <!-- 모든 예약 조회 -->
    <select id="findAllReservations" resultMap="ReserveResultMap">
        SELECT * FROM reservations
    </select>

    <!-- 예약 상태 업데이트 -->
    <update id="updateReservationStatus" parameterType="map">
        UPDATE reservations
        SET status = #{status}, user_id = #{userId}
        WHERE id = #{id}
    </update>

    <!-- 예약 가능 시간 추가 (관리자) -->
    <insert id="addAvailableReservation">
        INSERT INTO reservations (date, time_slot, status, reservation_time) 
        VALUES (#{date}, #{timeSlot}, 'AVAILABLE', CURRENT_TIMESTAMP)
    </insert>

    <!-- 사용자의 예약 조회 -->
    <select id="getUserReservations" parameterType="long" resultMap="ReserveResultMap">
        SELECT * FROM reservations WHERE user_id = #{userId}
    </select>

    <!-- 예약 승인 (관리자) -->
    <update id="approveReservation">
        UPDATE reservations 
        SET status = 'COMPLETED'
        WHERE id = #{id}
    </update>

    <!-- 예약 취소 (관리자 또는 사용자) -->
    <update id="cancelReservation">
        UPDATE reservations 
        SET status = 'CANCELED'
        WHERE id = #{id}
    </update>

    <!-- 예약 삭제 (관리자) -->
    <delete id="deleteReservation">
        DELETE FROM reservations WHERE id = #{id}
    </delete>

    <!-- 현재 예약된 인원 조회 -->
    <select id="getCurrentReservationCount" parameterType="map" resultType="int">
        SELECT SUM(number_of_people) 
        FROM reservations 
        WHERE date = #{date} AND time_slot = #{timeSlot}
    </select>

    <!-- 예약 추가 (정원 초과 확인) -->
    <insert id="addUserReservation">
        INSERT INTO reservations (user_name, date, time_slot, phone, email, birthdate, number_of_people, status, user_id)
        VALUES (#{userName}, #{date}, #{timeSlot}, #{phone}, #{email}, #{birthdate}, #{numberOfPeople}, 'COMPLETED', #{userId})
    </insert>

    <!-- 예약 인원 증가 (예약 승인 시) -->
<!--     <update id="increaseReservationCount">
        UPDATE reservations
        SET number_of_people = number_of_people + #{numberOfPeople}
        WHERE id = #{id} AND number_of_people + #{numberOfPeople} <= max_capacity
    </update> -->

    <!-- 예약 인원 감소 (예약 취소 시) -->
    <update id="decreaseReservationCount">
        UPDATE reservations
        SET number_of_people = number_of_people - #{numberOfPeople}
        WHERE id = #{id} AND number_of_people >= #{numberOfPeople}
    </update>

</mapper>
